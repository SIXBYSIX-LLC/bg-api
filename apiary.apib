FORMAT: 1A
HOST: https://api.marketplace.com/

# Marketplace API v1.0

It is a marketplace for equipments. The core architecture has API service to create, manage and views products in platform.
This documentation is aimed to give in-depth detail of API usage

## Authentication Flow
To access the resources, Authentication token is required. However few endpoints are not protected with authorization such as `forgot_password`.

There are two main default groups of Users, one is `device` and another is `user`.
Device user such as *web application / android / ios* will have very limited permissions which are mentioned below.

* POST [/users] - Create a new user.
* POST [/login] - Login user.
* GET [/categories] - View category.
* GET [/products] - View product.

*Note: To get the device token, please contact the administrator.*

To access other resources, device should use user's token received in `/login` response

**You should pass authentication token in header `Authorization: Token AUTH_TOKEN`**

## JSON

We both accept and respond with JSON for all calls made to the API. The console provides additional means for testing other forms of calls. OperationsWe use RESTful verbs for all operations and methods.

| Verb | Description |
|------|---------------|
| GET | Used to select one or more items. Success returns 200 status code with json result item(s) in body. |
| POST | Used to create a new item. Success returns 201 status code with newly created json item in body. |
| PUT | Used to update an item. Success returns 200 status code with updated json item in body. |
| DELETE | Used to delete an item. Success returns 204 status code with no body. |

## Response Envelope
The response will always be in JSON format. You can expect the proper HTTP status code in response header.

### Resource detail response
When single resource object is returned (eg. /users/1), the following response structure would be expected.

        {
            "data": {
                ...
                ...
            }
        }

### Resource list response
When resource list is returned (eg. /users, /products), the following response structure would be expected.

        {
            "meta": {
                "count": <Total number of results that can be fetched>,
                "next": <URL to browse next page>,
                "previous": <URL to browse previous page>
            },
            "data": [
                {
                    ...
                    ...
                },
                {
                    ...
                    ...
                }
            ]
        }


### Error response
When any error occurs you would expect the following response structure.

        {
            "error": {
                "type": "ValidationError",
                "detail": "Unable to log in with provided credentials.",
                "status_code": 400
            }
        }

`detail` is human readable response message.

`status_code` is http code


## HTTP Status Code

| HTTP Code | Description |
|-----------|------------------------------------------------------------------------|
| `200` | Success. Request complete with response |
| `201` | Success. New resource created. |
| `204` | Success. No content to return. Only the status code returns. |
| `400` | Bad Request - The request could not be parsed. Due to validation error |
| `401` | Unauthorized - access token missed, cannot access resource. |
| `404` | Not Found - resource doesn't exist. |
| `500` | Uncaught exception error. |
| `502` | API Service is down |


## Query Parameters

You can add query parameters to your requests, most commonly for GET requests.

*Example: http://www.sitename/com/api/v1/products?page=2&page_size=10 will return page 2, of 10 results per page.*

Note that your query parameters must be uri encoded


## Pagination
When you query the object collection (mostly the GET request),
you would always expect the paginated result.
By default the page size is 10 that means you can expect 10 result in each call.
The pagination parameters are described below.

* page_size: Defines the number of results desired in a page. Maximum value is 100.
* page: The page number you want to access.

If response is paginated, you would expect the attribute `meta`

    {
        "meta": {
            "count": 3,
            "next": null,
            "previous": null
        }
    }

- count: Total number of results that can be retrieved.
- next: The URL of next page
- previous: The URL of previous page


For some APIs, pagination is set to off. Such APIs will be explicitely mentioned

## Sorting

### Newest to oldest

By default any paginated result will be sorted oldest to newest order.
If you want newest to oldest, simply pass `order_by=-id` in query params


## Selective Fields

You can select fields in response by specifying the `fields` parameter.
It's a best practice to select only those fields that you really need in response.
It'll reduce the response time and the amount of data to be returned.
For eg, `/v1/products?fields=name,id,images`



# Group Authentication

Resources related authenticate and de-authenticate the user.

## Login [/v1/login]

Login user and get user's authentication token:


### Login [POST]

+ Request (application/json)

        {
            "username": "<email address>",
            "password": "<user password>"
        }


+ Response 200 (application/json)

        {
            "data": {
                "date_password_reset": null,
                "is_staff": false,
                "user_permissions": [],
                "timezone": "UTC",
                "id": 3,
                "date_joined": "2015-06-18T16:04:29Z",
                "is_superuser": false,
                "store_name": null,
                "last_login": "2015-06-18T16:04:29Z",
                "is_email_verified": false,
                "date_password_reset_request": null,
                "email": "in.abhi9@gmail.com",
                "zip_code": "360001",
                "is_active": true,
                "phone": "+919096028382",
                "is_admin": false,
                "groups": [
                    {
                        "id": 1,
                        "name": "User"
                    }
                ],
                "is_password_reset": true,
                "token": "8215983bf34d56c72ac06439124509ccb89a470e",
                "fullname": "Abhinav Kotak",
                "user": 3
            }
        }

## Reset Password [/v1/users/actions/password_reset]

This endpoint is useful for resetting the password in case user forgets.

### Making Reset Password Request [POST]

User will receive an email containing the password reset instruction.
Typically a unique token is generated and sent to user's email

+ Request (application/json)

        {
            "email": "<email address>"
        }

+ Response 204 (application/json)


### Reset the Password using Token [PUT]

When user will receive an email, email will contain the link with reset_key and open to web portal.
Web portal should extract that key and email address and perform this action.

+ Request (application/json)

        {
            "email": "abc@xyz.com",
            "new_password": "this is new password",
            "reset_key": "9bb3bdc1-b08a-4e11-bfaf-d5a16662b6f6"
        }

+ Response 204 (application/json)


# Group Users

The users endpoint provides methods to create update and delete user accounts within the system.
These user accounts are both shoppers and seller, with associated shipping addresses, 
billing addresses, and payment profiles per their ID. 

A shopper may need to have an account when making purchases or creating cart on marketplace.
When creating an account, you will perform the following steps:

* Create the user ID with the POST method.
* Add or update data to the account using the appropriate methods for the shipping addresses, billing addresses, and payment profiles. The ID will be required for these calls.

User can immeditely login as soon as sign up. Email verification is not needed for now


## Users Collection [/v1/users]


### Create [POST]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body

            {
                "phone": "(184)330-2765",
                "fullname": "Erick Hoeger",
                "password": "123",
                "email": "armani.romaguera@collins.com",
                "zip_code": "950252"
            }

+ Response 201 (application/json)
        
        {
            "data": {
                "id": 9,
                "groups": [
                    {
                        "id": 1,
                        "name": "User"
                    }
                ],
                "last_login": "2015-06-23T12:50:47.819942Z",
                "is_superuser": false,
                "email": "in.abdshi9@gmail.com",
                "is_active": true,
                "is_staff": false,
                "date_joined": "2015-06-23T12:50:47.819942Z",
                "fullname": "Abhinav Kotak",
                "zip_code": "360001",
                "phone": "+919096028382",
                "store_name": null,
                "is_email_verified": false,
                "timezone": "UTC",
                "password_reset_key": "8de27c28-5785-43c3-8f21-9b7647350ce8",
                "date_password_reset": null,
                "date_password_reset_request": null,
                "is_password_reset": true,
                "user_permissions": [],
                "user": 3
            }
        }



### List users [GET]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            


+ Response 200 (application/json)
        
        {
            "meta": {
                "count": 5,
                "next": null,
                "previous": null
            },
            "data": [
                {
                    "id": 8,
                    "groups": [],
                    "last_login": null,
                    "is_superuser": false,
                    "email": "umueller@gmail.com",
                    "is_active": true,
                    "is_staff": false,
                    "date_joined": "2015-06-23T13:10:23.094802Z",
                    "fullname": "Darrion Prosacco MD",
                    "zip_code": "583276207",
                    "phone": "1-966-225-5444x0405",
                    "store_name": "Koepp and Sons",
                    "is_email_verified": false,
                    "timezone": "UTC",
                    "date_password_reset": null,
                    "date_password_reset_request": null,
                    "is_password_reset": true,
                    "user_permissions": []
                },
                {
                    "id": 7,
                    "groups": [],
                    "last_login": null,
                    "is_superuser": false,
                    "email": "jerald61@hotmail.com",
                    "is_active": true,
                    "is_staff": false,
                    "date_joined": "2015-06-23T13:10:22.829651Z",
                    "fullname": "Mr. Fleming Ullrich",
                    "zip_code": "6326",
                    "phone": "1-584-868-5351x9986",
                    "store_name": "Beer-West",
                    "is_email_verified": false,
                    "timezone": "UTC",
                    "date_password_reset": null,
                    "date_password_reset_request": null,
                    "is_password_reset": true,
                    "user_permissions": []
                },
                {
                    "id": 6,
                    "groups": [],
                    "last_login": null,
                    "is_superuser": false,
                    "email": "kattie.lynch@hotmail.com",
                    "is_active": true,
                    "is_staff": false,
                    "date_joined": "2015-06-23T13:10:22.568129Z",
                    "fullname": "Tatyanna Lind",
                    "zip_code": "38723",
                    "phone": "1-390-437-8301x5538",
                    "store_name": "Little LLC",
                    "is_email_verified": false,
                    "timezone": "UTC",
                    "date_password_reset": null,
                    "date_password_reset_request": null,
                    "is_password_reset": true,
                    "user_permissions": []
                },
                {
                    "id": 5,
                    "groups": [],
                    "last_login": null,
                    "is_superuser": false,
                    "email": "brittney60@sawaynhane.biz",
                    "is_active": true,
                    "is_staff": false,
                    "date_joined": "2015-06-23T13:10:22.304881Z",
                    "fullname": "Jaida Stiedemann",
                    "zip_code": "12879",
                    "phone": "+34(6)6109543351",
                    "store_name": "Predovic Inc",
                    "is_email_verified": false,
                    "timezone": "UTC",
                    "date_password_reset": null,
                    "date_password_reset_request": null,
                    "is_password_reset": true,
                    "user_permissions": []
                },
                {
                    "id": 4,
                    "groups": [],
                    "last_login": null,
                    "is_superuser": false,
                    "email": "okunze@moenkuhlman.com",
                    "is_active": true,
                    "is_staff": false,
                    "date_joined": "2015-06-23T13:10:22.043156Z",
                    "fullname": "Gavyn Mohr",
                    "zip_code": "94089",
                    "phone": "1-599-695-8896",
                    "store_name": "Rutherford, Hegmann and Koelpin",
                    "is_email_verified": false,
                    "timezone": "UTC",
                    "date_password_reset": null,
                    "date_password_reset_request": null,
                    "is_password_reset": true,
                    "user_permissions": []
                }
            ]
        }

## User [/v1/users/{id}]

+ Parameters
    
    + id (required, number, `1`) ... Numeric id of user to perform action with

### User detail [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
        
        
+ Response 200 (application/json)

        {
            "data": {
                "id": 1,
                "groups": [],
                "last_login": "2015-06-18T15:57:13.341009Z",
                "is_superuser": true,
                "email": "a@bg.com",
                "is_active": true,
                "is_staff": true,
                "date_joined": "2015-06-18T15:46:26.257522Z",
                "fullname": "Abh",
                "zip_code": "36001",
                "phone": "+919096028382",
                "store_name": null,
                "is_email_verified": false,
                "timezone": "UTC",
                "date_password_reset": null,
                "date_password_reset_request": null,
                "is_password_reset": true,
                "user_permissions": []
            }
        }
        
## Update detail [PATCH]

You can update only following fields.

* fullname
* zip_code
* phone
* store_name
* timezone

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
        
    + Body
    
            {
                "fullname": "Erick Zulu"
            }
            
+ Response 200 (application/json)

        {
            "data": {
                "fullname": "Erick Zulu",
                "zip_code": "36001",
                "phone": "+919096028382",
                "store_name": null,
                "timezone": "UTC"
            }
        }

### Delete [DELETE]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 204 (application/json)


## Actions [/v1/users/{id}/actions/{action}]

These are the additional actions that can be performed on user object

+ Parameters
    + id (required, number, `1`) ... User id

### Change Password [POST]

+ Parameters
    + action (required, string, `change_password`) ... Must be `change_password`
    
+ Request (application/json)

    + Body
            
            {
                "old_password": "abc",
                "new_password": "xyz"
            }


+ Response 204 (application/json)


### Resend Email Verification Email Request [POST]

+ Parameters
    + action (required, string, `resend_email_verification`) ... Must be `resend_email_verification`
    
+ Response 204 (application/json)



# Group Address

Addresses are generic location added by the user.
Such addresses are defined as either job site or billing 
User can add as many as addresses they want.

### ENUM

* kind: 
    * job_site
    * billing

## Address Collection [/v1/users/{id}/addresses{?kind}]

+ Parameters
    + id (optional, number, `1`) ... User id for whome address actions needs to be performed.


### Create an Address [POST]

+ Attributes
    + first_name: Abc (string, required) - First name of person
    + last_name: Xyz (string, required) - Last name of the person
    + company_name: Co (string, optional) - Company name
    + phone: +12345678925 (number, required) - Phone no in E.164 format
    + country: 1269750 (number, required) - Country id received from system/countries api
    + state: 1270770 (number, required) - State id received from system/countries api
    + city: 1277202 (number, required) - City id received from system/countries api
    + name: 1269750 (string, required) - Label for the address
    + kind: billing (string, required) - Either `billing` or `job_site`
    + coord - Address coordinates in one of WKT / EWKT / HEXEWKB format
    + zip_code: 07418 (number, required)
    + address1 (string, required) - Address line 1
    + address2 (string, optional) - Address line 2


+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

            
    + Body
    
            {
                "city": 1277202,
                "kind": "job_site",
                "name": "Dallas",
                "first_name": "Cecil",
                "last_name": "Kunde",
                "company_name": "Bernhard Group",
                "phone": "+141903325396927",
                "country": 1269750,
                "address1": "1698 Kunde Rue\nSouth Gagebury, VI 41909",
                "address2": "",
                "state": 1270770,
                "zip_code": "07418",
                "coord": {
                  "type": "Point",
                  "coordinates": [
                    -5,
                    -4
                  ]
                }
            }
            
            
+ Response 201 (application/json)

            {
                "data": {
                    "id": 4,
                    "name": "Office",
                    "first_name": "Cecil",
                    "last_name": "Kunde",
                    "company_name": "Bernhard Group",
                    "phone": "+141903325396927",
                    "address1": "b3, 1234, o streed",
                    "address2": null,
                    "zip_code": "345345",
                    "coord": null,
                    "kind": "job_site",
                    "user": 3,
                    "city": 1258847,
                    "state": 1270770,
                    "country": 1269750
                }
            }


### List Addresses [GET]

+ Parameters
    + kind (optional, string, `job_site`) ... Filter by address kind.


+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

        {
            "meta": {
                "count": 2,
                "next": null,
                "previous": null
            },
            "data": [
                {
                    "id": 7,
                    "name": "Dallas",
                    "address1": "1698 Kunde Rue\nSouth Gagebury, VI 41909",
                    "address2": "",
                    "first_name": "Cecil",
                    "last_name": "Kunde",
                    "company_name": "Bernhard Group",
                    "phone": "+141903325396927",
                    "zip_code": "07418",
                    "coord": {
                        "type": "Point",
                        "coordinates": [
                            -5,
                            -4
                        ]
                    },
                    "kind": "job_site",
                    "user": 3,
                    "country": {
                        "name": "India",
                        "id": 1269750
                    },
                      "state": {
                        "name": "Gujarat",
                        "id": 1270770
                    },
                      "city": {
                        "name": "Rājkot",
                        "id": 1258847
                    }
                },
                {
                    "id": 1,
                    "name": "Office",
                    "first_name": "Cecil",
                    "last_name": "Kunde",
                    "company_name": "Bernhard Group",
                    "phone": "+141903325396927",
                    "address1": "b3, 1234, o streed",
                    "address2": null,
                    "zip_code": "345345",
                    "coord": null,
                    "kind": "job_site",
                    "user": 3,
                    "country": {
                        "name": "India",
                        "id": 1269750
                    },
                    "state": {
                        "name": "Gujarat",
                        "id": 1270770
                    },
                    "city": {
                        "name": "Bāntva",
                        "id": 1277202
                    }
                }
            ]
        }
        
## Address [/v1/users/{user_id}/addresses/{id}]

+ Parameters
    + user_id (optional, number, `1`) ... User id for whome address actions needs to be performed.
    + id (optional, number, `1`) ... Address id you want to manipulate
    
### Get Detail [GET]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

        {
            "id": 7,
            "name": "Dallas",
            "first_name": "Cecil",
            "last_name": "Kunde",
            "company_name": "Bernhard Group",
            "phone": "+141903325396927",
            "address1": "1698 Kunde Rue\nSouth Gagebury, VI 41909",
            "address2": "",
            "zip_code": "07418",
            "coord": {
                "type": "Point",
                "coordinates": [
                    -5,
                    -4
                ]
            },
            "kind": "job_site",
            "user": 3,
            "country": {
                "name": "India",
                "id": 1269750
            },
              "state": {
                "name": "Gujarat",
                "id": 1270770
            },
              "city": {
                "name": "Rājkot",
                "id": 1258847
            }
        }
        

### Update [PATCH]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

    + Body
            
            {"name": "Office2"}

+ Response 200 (application/json)

        {
            "data": {
                "id": 5,
                "name": "Office2",
                "first_name": "Cecil",
                "last_name": "Kunde",
                "company_name": "Bernhard Group",
                "phone": "+141903325396927",
                "address1": "b3, 1234, o streed",
                "address2": null,
                "zip_code": "345345",
                "coord": null,
                "kind": "job_site",
                "user": 3,
                "city": 1258847,
                "state": 1270770,
                "country": 1269750
            }
        }
        
### Delete [DELETE]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 204 (application/json)


# Group Favorite Products

User can mark any product as his favorite product.
It's basically some kind of collection/bookmark of products.

This endpoint will allow you to add any product to user's collection


## Favorte Product Collection [/v1/users/{user_id}/favorite/products]

+ Parameters
    + user_id (required, number, `1`) ... User id for whome favorite actions needs to be performed.

### Add a Product [POST]

+ Attributes
    + id (required, number) - Product id to be favorited

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

    + Body
            
            {"id": 5}

  
+ Response 204 (application/json)


### List favorites [GET]


+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

        {
            "meta": {
                "count": 2,
                "next": null,
                "previous": null
            },
            "data": [
                {
                    "name": "Track Mini Excavator, 7,000-9,900 lbs.",
                    "description": null,
                    "images": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                    "id": 1
                },
                {
                    "name": "Track Excavator, 44,000-49,900 lbs.",
                    "description": null,
                    "images": [],
                    "id": 2
                }
            ]
        }


## Favorite Product [/v1/users/{user_id}/favorite/products/{product_id}]

+ Parameters
    + user_id (required, number, `1`) ... User id for whome favorite actions needs to be performed.
    + product_id (required, number, `5`) ... Product id to be manipulated upon.
    
### Remove from Favorite [DELETE]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

  
+ Response 204 (application/json)


# Group Categories

The categories endpoint supports getting specific information about one category, subcategory, or a collection of categories.
These categories represent a main category, a subcategory, or a specific category page to load and display in the marketplace.
Products are associated to only one leaf subcategory. These groupings give shoppers a browsing experience for locating products in marketplace.

To navigate to subcategories for product assignment, categories can be filter by its parent category.

Categories can only be created/updated by Admins only.

## Categories Collection [/v1/categories{?parent,parent__isnull}]

### List categories [GET]

+ Parameters
    + parent (optional, number, `1`) ... Filter by parent category id
    + parent__isnull (optional, boolean, `True`) ... Filter by parent is null. `True` or `False`

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE
    
+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": 2,
                        "image": null,
                        "name": "Excavators",
                        "hierarchy": [
                            1
                        ],
                        "parent": 1
                    },
                    {
                        "id": 3,
                        "image": null,
                        "name": "abc",
                        "hierarchy": [],
                        "parent": null
                    },
                    {
                        "id": 1,
                        "image": {
                            "url": "https://res.cloudinary.com/inabhi9/image/upload/v1435079806/local/category_images/1.jpg",
                            "id": 19
                        },
                        "name": "Earth Moving",
                        "hierarchy": [],
                        "parent": null
                    }
                ]
            }
            
            
### Create a Category [POST]

To set an image, see staticfile API.

+ Attributes
    + parent (optional, number) - Parent is the id of parent category. It will define the new category as subcategory of the parent category


+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE
    + Body
    
            {
                "name": "Power & HVAC",
                "parent: 2
            }

+ Response 201 (application/json)

            {
                "data": {
                    "id": 4,
                    "image": null,
                    "name": "Power & HVAC",
                    "hierarchy": [],
                    "parent": 2
                }
            }
            
# Group Products

Get all products (i.e. by category, or featured products, etc.), or get a specific product.
To refine the returned results, the request can specify specific categories, search terms on all products. 

Related products share the same subcategory as an entered product code. To get related products you can call the Products Collection endpoint using the category: /products?category={id}.
When working with images, all image data is served through staticfile collection array. Each image includes attributes for id and URL.

### ENUM
* condition:
    * used
    * new

## Product Collection [/v1/products{?category,is_active,search,user,order_by,daily_price__gte,daily_price__lte,sell_price__gte,sell_price__lte}]

### Add a Product [POST]

To add images to product, see staticfile API. Upto 10 images per products are allowed

+ Attributes
    + name: Commercial Walk Behind Mower (required, string) - Name of the product
    + description (optional, string) - Brief description for product
    + tags (optional, array) - Array of string for tagging the product. It'll be useful to filter product based on tags
    + brand (required, string) - Brand of the product
    + category (required, number) - Category id that product should belongs to. It should be leaf category
    + condition (required, string) - Product condition any of condition enum
    + hourly_price: 15.50 (required, number) - Decimal number with two precision represents the price in USD. Set 0 if not applicable
    + daily_price: 75.45 (required, number) - Decimal number with two precision represents the price in USD. Set 0 if not applicable
    + weekly_price: 125.14 (required, string) - Decimal number with two precision represents the price in USD. Set 0 if not applicable
    + monthly_price: 475.25 (required, string) - Decimal number with two precision represents the price in USD. Set 0 if not applicable
    + sell_price: 4509.56 (required, string) - Decimal number with two precision represents the price in USD. Set 0 if not applicable
    + sku (optional, string) - SKU for the product. If set blank, system will generate one
    + location (required, number) - Location id that describe the location of product. If you don't have location create location using address API
    + qty: 10 (optional, number) - Number of inventories to be generated. Note that serial number would be blank
    
+ Request (application/json)

    + Header
    
            Authorization: Token TOKEN_VALUE

    + Body
    
            {
                "monthly_price": 9767.81,
                "category": 3,
                "hourly_price": 75.81,
                "daily_price": 1670.81,
                "name": "Track Mini Excavator",
                "tags": [
                    "excavator",
                    "pornition",
                    "bob builder"
                ],
                "brand": "O'Reilly PLC",
                "weekly_price": 7872.95,
                "sell_price": 4262.87,
                "location": 1,
                "sku": "",
                "condition": "used",
                "description": [
                    "Deleniti dolorem ipsa dolorum vero id quo porro. Numquam eligendi qui maiores dolor dolores asperiores minima et. Earum eveniet minima dicta aut sunt illo perferendis.",
                    "Eveniet facilis voluptatibus aut saepe ea error voluptas. Libero et aut sapiente quis. Laboriosam dolore reiciendis ea aut omnis dignissimos. Repellendus voluptate ducimus accusantium cum eos natus."
                ]
            }
            
+ Response 201 (application/json)

        {
            "data": {
                "id": 11,
                "images": [],
                "name": "Track Mini Excavator",
                "description": null,
                "brand": "JCB",
                "hourly_price": 75.81,
                "daily_price": "189.00",
                "weekly_price": "649.00",
                "monthly_price": "1739.00",
                "sell_price": "0.00",
                "is_active": false,
                "sku": "2TRA31435083296",
                "attributes": null,
                "tags": [],
                "condition": "used",
                "date_created_at": "2015-06-23T18:14:56.201463Z",
                "date_updated_at": "2015-06-23T18:14:56.201481Z",
                "category": 2,
                "location": 1,
                "user": 3
            }
        }
        
### List Products [GET]

+ Parameters
    + category (optional, number, `1`) ... Filter products by category id
    + is_active (optional, boolean, `true`) ... Filter by product is_active attribute
    + user (optional, number, `1`) ... Filter by user id
    + search (optional, string, `Excavator`) ... Full text search for products. It searches in `name` and `tags`
    + daily_price__gte (optional, float, `59.56`) ... Filter by daily price great or equal
    + daily_price__lte (optional, float, `59.56`) ... Filter by daily price less or equal
    + sell_price__gte (optional, float, `59.56`) ... Filter by sell price great or equal
    + sell_price__lte (optional, float, `59.56`) ... Filter by sell price less or equal
    + order_by (optional, string, `name`) ... Order ascending/descending currently `name`, `daily_price`, `sell_price` fields are supported. Default ordering is set to id

+ Request (application/json)

    + Header
            
            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 3,
                    "next": "http://localhost:8000/products?page=2",
                    "previous": null,
                    "facets": [
                        {
                            "count": 33,
                            "location": {
                                "country": {
                                    "name": "India",
                                    "id": 1269750
                                },
                                "state": {
                                    "name": "Gujarat",
                                    "id": 1270770
                                },
                                "city": {
                                    "name": "Pālanpur",
                                    "id": 1260777
                                }
                            }
                        }
                    ]
                },
                "data": [
                    {
                        "id": 1,
                        "qty": 3,
                        "images": [
                            {
                                "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                                "id": 10
                            },
                            {
                                "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                                "id": 12
                            },
                            {
                                "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434996576/local/product_images/1.jpg",
                                "id": 14
                            }
                        ],
                        "name": "Track Mini Excavator, 7,000-9,900 lbs.",
                        "description": null,
                        "brand": "JCB",
                        "hourly_price": 75.81,
                        "daily_price": "189.00",
                        "weekly_price": "649.00",
                        "monthly_price": "1739.00",
                        "sell_price": "0.00",
                        "is_active": false,
                        "sku": "2TRA31434965116",
                        "attributes": null,
                        "tags": [],
                        "condition": "used",
                        "date_created_at": "2015-06-22T09:25:16.467775Z",
                        "date_updated_at": "2015-06-22T09:25:16.467821Z",
                        "category": {
                            "id": 246,
                            "image": null,
                            "name": "Guillermo",
                            "hierarchy": [
                                244,
                                245
                            ],
                            "parent": 245
                        },
                        "location": {
                            "country": {
                                "name": "India",
                                "id": 1269750
                            },
                            "state": {
                                "name": "Gujarat",
                                "id": 1270770
                            },
                            "city": {
                                "name": "Pālanpur",
                                "id": 1260777
                            },
                            "zip_code": "367175"
                        },
                        "user": 3
                    },
                    {
                        "id": 4,
                        "qty": 0,
                        "images": [],
                        "name": "Track Mini Excavator, 7,000-9,1900 lbs.",
                        "description": null,
                        "brand": "JCB",
                        "hourly_price": 75.81,
                        "daily_price": "189.00",
                        "weekly_price": "649.00",
                        "monthly_price": "1739.00",
                        "sell_price": "0.00",
                        "is_active": false,
                        "sku": "2TRA31434983013",
                        "attributes": null,
                        "tags": [],
                        "condition": "used",
                        "date_created_at": "2015-06-22T14:23:33.691045Z",
                        "date_updated_at": "2015-06-22T14:23:33.691071Z",
                        "category": {
                            "id": 246,
                            "image": null,
                            "name": "Guillermo",
                            "hierarchy": [
                                244,
                                245
                            ],
                            "parent": 245
                        },
                        "location": {
                            "country": {
                                "name": "India",
                                "id": 1269750
                            },
                            "state": {
                                "name": "Gujarat",
                                "id": 1270770
                            },
                            "city": {
                                "name": "Pālanpur",
                                "id": 1260777
                            },
                            "zip_code": "367175"
                        },
                        "user": 3
                    },
                    {
                        "id": 5,
                        "qty": 0,
                        "images": [],
                        "name": "Track Mini Excavator, 7,000-9,900 lbs.",
                        "description": null,
                        "brand": "JCB",
                        "hourly_price": 75.81,
                        "daily_price": "189.00",
                        "weekly_price": "649.00",
                        "monthly_price": "1739.00",
                        "sell_price": "0.00",
                        "is_active": false,
                        "sku": "2TRA31434983091",
                        "attributes": null,
                        "tags": [],
                        "condition": "used",
                        "date_created_at": "2015-06-22T14:24:51.586335Z",
                        "date_updated_at": "2015-06-22T14:24:51.586356Z",
                        "category": {
                            "id": 246,
                            "image": null,
                            "name": "Guillermo",
                            "hierarchy": [
                                244,
                                245
                            ],
                            "parent": 245
                        },
                        "location": {
                            "country": {
                                "name": "India",
                                "id": 1269750
                            },
                            "state": {
                                "name": "Gujarat",
                                "id": 1270770
                            },
                            "city": {
                                "name": "Pālanpur",
                                "id": 1260777
                            },
                            "zip_code": "367175"
                        },
                        "user": 3
                    }
                ]
            }

## Product [/v1/products/{id}]

+ Parameters
    + id (required, number, `1`) ... Product id on which you want to perform actions.
    
### Detail [GET]

+ Request

    + Header
            
            Authorization: Token TOKEN_VALUE
            
+ Response 200 (application/json)

        {
            "data": {
                "id": 1,
                "qty": 3,
                "images": [
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                        "id": 10
                    },
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                        "id": 12
                    },
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434996576/local/product_images/1.jpg",
                        "id": 14
                    }
                ],
                "name": "Track Mini Excavator, 7,000-9,900 lbs.",
                "description": null,
                "brand": "JCB",
                "hourly_price": 75.81,
                "daily_price": "189.00",
                "weekly_price": "649.00",
                "monthly_price": "1739.00",
                "sell_price": "0.00",
                "is_active": false,
                "sku": "2TRA31434965116",
                "attributes": null,
                "tags": [],
                "condition": "used",
                "date_created_at": "2015-06-22T09:25:16.467775Z",
                "date_updated_at": "2015-06-22T09:25:16.467821Z",
                "category": 2,
                "location": {
                    "country": {
                        "name": "India",
                        "id": 1269750
                    },
                    "state": {
                        "name": "Gujarat",
                        "id": 1270770
                    },
                    "city": {
                        "name": "Pālanpur",
                        "id": 1260777
                    },
                    "zip_code": "367175"
                },
                "user": 3
            }
        }
        
### Update Detail [PATCH]

You can update all attributes except `qty`. To update the quantity checkout the inventory API.

+ Request (application/json)

    + Header
            
            Authorization: Token TOKEN_VALUE
    
    + Body
    
            {"name": "Excavator"}
            
+ Response 200 (application/json)

        {
            "data": {
                "id": 1,
                "qty": 3,
                "images": [
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                        "id": 10
                    },
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434994716/local/product_images.jpg",
                        "id": 12
                    },
                    {
                        "url": "https://res.cloudinary.com/inabhi9/image/upload/v1434996576/local/product_images/1.jpg",
                        "id": 14
                    }
                ],
                "name": "Excavator",
                "description": null,
                "brand": "JCB",
                "hourly_price": 75.81,
                "daily_price": "189.00",
                "weekly_price": "649.00",
                "monthly_price": "1739.00",
                "sell_price": "0.00",
                "is_active": false,
                "sku": "2TRA31434965116",
                "attributes": null,
                "tags": [],
                "condition": "used",
                "date_created_at": "2015-06-22T09:25:16.467775Z",
                "date_updated_at": "2015-06-22T09:25:16.467821Z",
                "category": 2,
                "location": 1,
                "user": 3
            }
        }
        
        
### Delete [DELETE]

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 204 (application/json)

## Available Shipping Methods [/v1/productions/{product_id}/available_shippings{?zip_code,country}]

This endpoint is useful to quickly check if the product is deliverable to given country and zip code.
It returns the shipping methods available to zip code

### Get Shipping Methods [GET]

+ Parameters
    + zip_code (required, string, `365012`) ... Zip code
    + country (required, number, `123456`) ... Country id where the given zip code to be found

+ Request (application/json)
    + Header
    
            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "data": {
                    "standard_shipping": {
                        "id": 1,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "cost": 2243.65,
                        "user": 4,
                        "origin": 4,
                        "country": 1269750
                    }
                }
            }

+ Response 200 (application/json)

            {
                "data": {
                    "standard_shipping": null
                }
            }

# Group Inventories

#### Intro
Inventories are stock information of the particular product.
So it'll always be related to specific product and generally represents the quantity of the product.

#### Concept
When you want to add quantity/stock of same product, you can add inventory of that product.
In backend, each inventory is created as separate entity and allow you to edit each entity independently such as serial number.
The main reason behind making inventory as separate entity is to reduce the duplication of the product catalog entry when equipment differs just for serial number or other information.

#### Shortcut method to add bulk inventories
While adding new product to catalog using products API, you can specify `qty` attribute;
System will generate inventory objects as much as `qty` fields,
but updation of qty field using product API is not supported.
You need to using inventory API to update/delete the objects.

### Enum

+ source
    + `purchased`: If you own the inventory
    + `rented`: if you owe the inventory

## Inventory Collection [/v1/products/{id}/inventories]

+ Parameters
    + id (required, number, `1`) ... Product id for inventories to be added

### Add Inventory [POST]

+ Attributes
    + serial_no (optional, string) - Serial number of the product if any
    + source (string) - Any of source Enum
    + is_active (required, boolean) - Is inventory available or not


+ Request (application/json)
    + Header

            Authorization: Token TOKEN_VALUE

    + Body
    
            {
                "serial_no": "123123"
                "source": "purchased"
                "is_active": "true"
            }
            
+ Response 201 (application/json)

            {
                "data": {
                    "id": 26,
                    "serial_no": "456123",
                    "source": "purchased",
                    "is_active": true,
                    "date_created_at": "2015-07-03T17:09:27.090818Z",
                    "user": 3
                }
            }
            
### List Inventories [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 4,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 14,
                        "serial_no": null,
                        "source": "purchased",
                        "is_active": true,
                        "date_created_at": "2015-06-22T12:14:46.193540Z",
                        "user": 3
                    },
                    {
                        "id": 15,
                        "serial_no": "123",
                        "source": "purchased",
                        "is_active": true,
                        "date_created_at": "2015-06-22T12:15:36.111680Z",
                        "user": 3
                    },
                    {
                        "id": 16,
                        "serial_no": "456",
                        "source": "purchased",
                        "is_active": true,
                        "date_created_at": "2015-06-22T12:15:41.284624Z",
                        "user": 3
                    },
                    {
                        "id": 26,
                        "serial_no": "456123",
                        "source": "purchased",
                        "is_active": true,
                        "date_created_at": "2015-07-03T17:09:27.090818Z",
                        "user": 3
                    }
                ]
            }
            
## Inventory [/v1/products/{product_id}/inventories/{id}]

+ Parameters
    + product_id (required, number, `1`) ... Product id for inventories to be added
    + id (required, number, `1`) ... Inventory id
    
### Detail [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
            
+ Response 200 (application/json)

            {
                "data": {
                    "id": 14,
                    "serial_no": null,
                    "source": "purchased",
                    "is_active": true,
                    "date_created_at": "2015-06-22T12:14:46.193540Z",
                    "user": 3
                }
            }
            
            
### Update [PATCH]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "serial_no": "123123"
                "source": "purchased"
                "is_active": "true"
            }
            
+ Response 200 (application/json)

            {
                "data": {
                    "id": 26,
                    "serial_no": "456123",
                    "source": "purchased",
                    "is_active": true,
                    "date_created_at": "2015-07-03T17:09:27.090818Z",
                    "user": 3
                }
            }
            
            
# Group Staticfile
#### Intro
The aim of this resource is to handle static files upload for any object (like product images,
user credit form, etc...) and store them to cloud.

#### Concept
The concept of having single endpoint of handling file gives developer the ease of managing the files.
This single endpoint gives all the operation on file object.

### Enum

+ target
    + `category.Category.image`: Use this when you want to set/upload image to category
    + `catalog.Product.images`: Add image to the product images
    + `usr.Profile.credit_form`: Set credit form (a PDF file) to user account

## Staticfile Collection [/v1/staticfiles]

### Uploading the file [POST]

+ Attributes
    + target: category.Category.image (required, string) - Any of target enum
    + target_id (required, number) - Target object id
    + file (required) - File to be uploaded

+ Request (multipart/form-data)

    + Header

            Authorization: Token TOKEN_VALUE
    
+ Response 201 (application/json)

            {
                "data": {
                    "target": "category.Category.image",
                    "target_id": "1",
                    "url": "https://res.cloudinary.com/inabhi9/image/upload/v1435951592/local/category_images/1.jpg",
                    "id": 20
                }
            }
            
## Staticfile [/v1/staticfiles/{id}]

+ Parameters
    + id (required, number, `1`) ... Staticfile id

### Delete file [DELETE]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
    
+ Response 204 (application/json)


# Group Cart

Cart allows customers to accumulate a list of items for purchase or rent, described metaphorically as “placing items in the shopping cart” or “add to cart.”
Upon checkout, system calculates a total for the order, including shipping and handling (i.e., postage and packing) charges and the associated taxes, as applicable.

Typical process of purchasing or renting the item is to add them into the cart. User will be having only single cart a time and it'll be preserved untill checkout or manual clear process.

Cart can be value of 0 if contains all rental items, so the payable amount would be 0 at the time of checkout.


## The Current Cart [/v1/carts/current]

This endpoing will return the current cart of the user. Response will contain the cart id; That cart id should be used when updating the cart items

### Get the Current Cart [GET]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
    
+ Response 200 (application/json)


            {
                "data": {
                    "id": 1,
                    "rental_products": [{
                        "id": 1,
                        "product": {
                            "name": "Linnie",
                            "image": null,
                            "id": 81
                        },
                        "shipping_kind": "delivery",
                        "subtotal": 7502.65,
                        "shipping_charge": 0,
                        "additional_charge": 0,
                        "is_shippable": false,
                        "qty": 1,
                        "cost_breakup": {
                            "additional_charge": [
                                {
                                    "name": "Environment Fee",
                                    "categories": [],
                                    "value": 4.68,
                                    "amt": 25.17,
                                    "user": 6,
                                    "item_kind": "all",
                                    "id": 3,
                                    "unit": "pct"
                                },
                                {
                                    "name": "Sales tax",
                                    "pct": 3.2,
                                    "amt": 166.84,
                                    "taxable_amt": 5213.68,
                                    "id": 1,
                                    "merged": true
                                }
                            ],
                            "subtotal": {
                                "rent_unit_days": 30,
                                "unit_price": 7502.652000000001,
                                "rent_per": 8336.28,
                                "daily_rent": 277.87600000000003,
                                "amt": 7502.65,
                                "num_days": 27
                            },
                            "shipping": {
                                "amt": 0
                            }
                        },
                        "date_start": "2015-08-09T13:28:57.794725Z",
                        "date_end": "2015-09-05T13:28:57.794762Z",
                        "is_postpaid": true,
                        "cart": 1
                    }],
                    "purchase_products": [{
                        "id": 1,
                        "product": {
                            "name": "Leander",
                            "image": null,
                            "id": 81
                        },
                        "shipping_kind": "delivery",
                        "subtotal": 8023.61,
                        "shipping_charge": 0,
                        "additional_charge": 0,
                        "is_shippable": false,
                        "qty": 1,
                        "cost_breakup": {
                            "additional_charge": [
                                {
                                    "name": "Environment Fee",
                                    "categories": [],
                                    "value": 4.68,
                                    "amt": 25.17,
                                    "user": 6,
                                    "item_kind": "all",
                                    "id": 3,
                                    "unit": "pct"
                                },
                                {
                                    "name": "Sales tax",
                                    "pct": 3.2,
                                    "amt": 166.84,
                                    "taxable_amt": 5213.68,
                                    "id": 1,
                                    "merged": true
                                }
                            ],
                            "subtotal": {
                                "amt": 8023.61,
                                "unit_price": 8023.61
                            },
                            "shipping": {
                                "amt": 0
                            }
                        },
                        "cart": 1
                    }],
                    "total": 8023.61,
                    "date_created_at": "2015-08-06T13:32:11.248463Z",
                    "date_updated_at": "2015-08-06T13:32:11.248492Z",
                    "is_active": true,
                    "subtotal": 8023.61,
                    "shipping_charge": 110.12,
                    "additional_charge": 56.23,
                    "cost_breakup": {
                        "additional_charge": {
                            "environment_fee": 26.130000000000003,
                            "sales_tax": 391
                        },
                        "sales_tax_pct": 2.7
                    },
                    "location": null,
                    "billing_address": null,
                    "user": 3
                }
            }



## Rental/Purchase Items [/v1/carts/{cart_id}/{add_as}]

This resource allow you to manage (add/update/remove) rental items in the cart. After successful operation, response will be same as cart response

+ Parameters
    + cart_id (required, number, `1`) ... Current cart id you get from `/carts/current` endpoint
    + add_as (required, string, `rentals`) ... If you're adding the item for rent, value should be `rentals`, `purchases` otherwise
    

### Add [POST]

+ Attributes
    + shippin_kind (string, required) - Either `pickup` or `delivery`
    + date_start (string, required) - ISO formated date string
    + date_end (string, required) - ISO formated date string
    + produt (number, required) - Product id to be added as rental
    

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "shipping_kind": "delivery",
                "date_start": "2015-07-26T08:01:30.073832+00:00",
                "product": 81, 
                "date_end": "2015-08-22T08:01:30.073862+00:00"
            }

+ Response 200 (application/json)

            {
                "data": {
                    "id": 1,
                    "rental_products": [],
                    "purchase_products": [
                        {
                            "id": 1,
                            "product": {
                                "name": "Leander",
                                "image": null,
                                "id": 81
                            },
                            "shipping_kind": "delivery",
                            "subtotal": 8023.61,
                            "shipping_charge": 0,
                            "additional_charge": 0,
                            "is_shippable": false,
                            "qty": 1,
                            "cost_breakup": {
                                "additional_charge": "additional_charge": [
                                    {
                                        "name": "Environment Fee",
                                        "categories": [],
                                        "value": 4.68,
                                        "amt": 25.17,
                                        "user": 6,
                                        "item_kind": "all",
                                        "id": 3,
                                        "unit": "pct"
                                    },
                                    {
                                        "name": "Sales tax",
                                        "pct": 3.2,
                                        "amt": 166.84,
                                        "taxable_amt": 5213.68,
                                        "id": 1,
                                        "merged": true
                                    }
                                ],
                                "subtotal": {
                                    "amt": 8023.61,
                                    "unit_price": 8023.61
                                },
                                "shipping": {
                                    "amt": 0
                                }
                            },
                            "cart": 1
                        }
                    ],
                    "total": 8023.61,
                    "date_created_at": "2015-08-06T13:32:11.248463Z",
                    "date_updated_at": "2015-08-06T13:32:11.248492Z",
                    "is_active": true,
                    "subtotal": 8023.61,
                    "shipping_charge": 0,
                    "additional_charge": 0,
                    "cost_breakup": {
                        "additional_charge": {
                            "environment_fee": 26.130000000000003,
                            "sales_tax": 391
                        },
                        "sales_tax_pct": 0
                    },
                    "location": null,
                    "billing_address": null,
                    "user": 3
                }
            }



## Rental/Purchase Item [/v1/carts/{cart_id}/{item_as}/{id}]

+ Parameters
    + cart_id (required, number, `1`) ... Current cart id you get from `/carts/current` endpoint
    + item_as (required, string, `rentals`) ... If you're adding the item for rent, value should be `rentals`, `purchases` otherwise
    + id (required, number, `2`) ... Item id
    

### Update [PATCH]
You can update `qty`, `shipping_kind`, `date_start` and `date_end` attributes


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "shipping_kind": "delivery",
                "date_end": "2015-08-25T08:01:30.073862+00:00"
            }

+ Response 200 (application/json)

            {
                "data": {
                    "id": 1,
                    "rental_products": [],
                    "purchase_products": [
                        {
                            "id": 1,
                            "product": {
                                "name": "Leander",
                                "image": null,
                                "id": 81
                            },
                            "shipping_kind": "delivery",
                            "subtotal": 8023.61,
                            "shipping_charge": 0,
                            "additional_charge": 0,
                            "is_shippable": false,
                            "qty": 1,
                            "cost_breakup": {
                                "additional_charge": [
                                    {
                                        "name": "Environment Fee",
                                        "categories": [],
                                        "value": 4.68,
                                        "amt": 25.17,
                                        "user": 6,
                                        "item_kind": "all",
                                        "id": 3,
                                        "unit": "pct"
                                    },
                                    {
                                        "name": "Sales tax",
                                        "pct": 3.2,
                                        "amt": 166.84,
                                        "taxable_amt": 5213.68,
                                        "id": 1,
                                        "merged": true
                                    }
                                ],
                                "subtotal": {
                                    "amt": 8023.61,
                                    "unit_price": 8023.61
                                },
                                "shipping": {
                                    "amt": 0
                                }
                            },
                            "cart": 1
                        }
                    ],
                    "total": 8023.61,
                    "date_created_at": "2015-08-06T13:32:11.248463Z",
                    "date_updated_at": "2015-08-06T13:32:11.248492Z",
                    "is_active": true,
                    "subtotal": 8023.61,
                    "shipping_charge": 0,
                    "additional_charge": 0,
                    "cost_breakup": {
                        "additional_charge": {
                            "environment_fee": 26.130000000000003,
                            "sales_tax": 391
                        },
                        "sales_tax_pct": 0
                    },
                    "location": null,
                    "billing_address": null,
                    "user": 3
                }
            }


### Remove an Item [DELETE]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE 

+ Response 200 (application/json)


            {
                "data": {
                    "id": 1,
                    "rental_products": [],
                    "purchase_products": [],
                    "total": 8023.61,
                    "date_created_at": "2015-08-06T13:32:11.248463Z",
                    "date_updated_at": "2015-08-06T13:32:11.248492Z",
                    "is_active": true,
                    "subtotal": 0.0,
                    "shipping_charge": 0,
                    "additional_charge": 0,
                    "cost_breakup": {
                        "additional_charge": {
                            "sales_tax": 0
                        },
                        "sales_tax_pct": 0
                    },
                    "location": null,
                    "billing_address": null,
                    "user": 3
                }
            }



## Checkout [/v1/carts/{cart_id}/actions/checkout]

This endpoint provides will validate the cart data, place an order and 
generating the invoice of payable amount.

As soon as user checks out, front-end should initiate for the invoice payment flow.

+ Parameters
    + cart_id (required, number, `1`) ... Current cart id you get from `/carts/current` endpoint

### Checkout [PUT]
+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE 

+ Response 200 (application/json)
    
            {
                "data": {
                    "order": 1,
                    "invoice": 1,
                    "payable_amount": 4928.34
                }
            }


# Group Order
Order is a collection of rental/purchase items user has availed through the checkout process.

As soon as order is created (using checkout process), the invoice will be generated of payable amount.
User should pay the invoice in order to confirm the order.

### Enum

+ Item Status
    + `not_confirmed`: User placed the order but payment and other verification is pending
    + `confirmed`: Item is confirmed by the system which means payment is collected
    + `approved`: Item is approved/accepted by seller, which means seller will process shortly
    + `ready_to_ship`: Item is ready to ship to buyer location if shipping_kind if `delivery`
    + `dispatched`: Item is shipped
    + `ready_to_pickup`: Item ready to pick up means buyer can pickup the item any time from the seller's location
    + `picked_up`: Item is picked up
    + `delivered`: Item is delivered
    + `cancelled`: Item is canceled by either seller or buyer. Can be cancelled only when status is or before ready_to_pickup / ready_to_ship
    + `end_contract`: When buyer want to end the rental Item contract.


## Order Collection [/v1/orders]

This endpoint provides the orders placed by the user.

### List [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
    
    
+ Response 200 (application/json)

        
            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "items": [
                            {
                                "id": 1,
                                "current_status": "not_confirmed",
                                "user": {
                                    "fullname": "Latricia Schuppe MD",
                                    "id": 5
                                },
                                "rent_details": {
                                    "date_start": "2015-08-09T14:16:13.091467Z",
                                    "date_end": "2015-09-05T14:16:13.091474Z",
                                    "is_postpaid": true
                                },
                                "detail": {
                                    "id": 57,
                                    "name": "Letitia",
                                    "daily_price": 9672.98,
                                    "sell_price": 1461.57,
                                    "weekly_price": 6010.58,
                                    "monthly_price": 4149.44,
                                    "image": null
                                },
                                "subtotal": 3734.5,
                                "shipping_charge": 3292.85,
                                "additional_charge": 191.14,
                                "qty": 1,
                                "shipping_kind": "delivery",
                                "shipping_method": "Standard shipping"
                            },
                            {
                                "id": 2,
                                "current_status": "not_confirmed",
                                "user": {
                                    "fullname": "Latricia Schuppe MD",
                                    "id": 5
                                },
                                "rent_details": {
                                    "date_start": "2015-08-09T14:16:13.091467Z",
                                    "date_end": "2015-09-05T14:16:13.091474Z",
                                    "is_postpaid": false
                                },
                                "detail": {
                                    "id": 68,
                                    "name": "Fae",
                                    "daily_price": 655.65,
                                    "sell_price": 5163.78,
                                    "weekly_price": 9387.43,
                                    "monthly_price": 1764.76,
                                    "image": null
                                },
                                "subtotal": 1588.28,
                                "shipping_charge": 5977.87,
                                "additional_charge": 205.8,
                                "qty": 1,
                                "shipping_kind": "delivery",
                                "shipping_method": "Standard shipping"
                            }
                        ],
                        "total": 12598.29,
                        "date_created_at": "2015-08-06T14:16:33.751569Z",
                        "date_updated_at": "2015-08-06T14:16:33.751596Z",
                        "subtotal": 2993.97,
                        "shipping_charge": 9270.72,
                        "additional_charge": 333.6,
                        "user": 5
                    }
                ]
            }


## Order [/v1/orders/{order_id}]
Once the order is placed cannot be cancelled but individule item can be cancelled.
If all item is cancelled the entire order is said to be cancelled.


### Detail [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)


            {
                "data": {
                    "id": 1,
                    "items": [
                        {
                            "id": 1,
                            "current_status": "not_confirmed",
                            "user": {
                                "fullname": "Dr. Martine Gleichner PhD",
                                "id": 5
                            },
                            "rent_details": {
                                "date_start": "2015-08-10T03:51:09.797029Z",
                                "date_end": "2015-09-06T03:51:09.797039Z",
                                "is_postpaid": true
                            },
                            "detail": {
                                "sku": "171ARE61438919496",
                                "category": 171,
                                "daily_price": 7573.35,
                                "name": "Areli",
                                "tags": [
                                    "excavator",
                                    "pornition",
                                    "bob builder"
                                ],
                                "monthly_price": 1532.72,
                                "brand": "Harris, Streich and Upton",
                                "description": "Qui voluptatibus ipsam quia quis. At tenetur placeat sed fugiat non. Hic autem distinctio magni maxime quia sed. Consequatur odit quia perspiciatis vitae sunt quia. Omnis fuga ab alias aspernatur dolorum ducimus vel ullam. Qui culpa quasi corporis necessitatibus perspiciatis provident qui. Expedita temporibus quasi quis necessitatibus ex commodi vel. Excepturi atque nemo minima ut est incidunt recusandae voluptas.",
                                "is_active": false,
                                "weekly_price": 166.58,
                                "sell_price": 7603.3,
                                "date_created_at": "2015-08-07T03:51:36.228873Z",
                                "date_updated_at": "2015-08-07T03:51:36.228890Z",
                                "user": 6,
                                "images": [],
                                "attributes": null,
                                "id": 57,
                                "condition": "used",
                                "location": 12
                            },
                            "subtotal": 1379.45,
                            "shipping_charge": 2368.94,
                            "additional_charge": 3.75,
                            "cost_breakup": {
                                "additional_charge": [
                                    {
                                        "name": "Environment Fee",
                                        "categories": [],
                                        "value": 4.68,
                                        "amt": 25.17,
                                        "user": 6,
                                        "item_kind": "all",
                                        "id": 3,
                                        "unit": "pct"
                                    },
                                    {
                                        "name": "Sales tax",
                                        "pct": 3.2,
                                        "amt": 166.84,
                                        "taxable_amt": 5213.68,
                                        "id": 1,
                                        "merged": true
                                    }
                                ],
                                "subtotal": {
                                    "rent_unit_days": 30,
                                    "unit_price": 1379.448,
                                    "rent_per": 1532.72,
                                    "daily_rent": 51.09066666666667,
                                    "amt": 1379.45,
                                    "num_days": 27
                                },
                                "shipping": {
                                    "method": "standard_shipping",
                                    "id": 9,
                                    "amt": 2368.94
                                }
                            },
                            "qty": 1,
                            "shipping_kind": "delivery",
                            "shipping_method": "Standard shipping"
                        },
                        {
                            "id": 3,
                            "current_status": "not_confirmed",
                            "user": {
                                "fullname": "Dr. Martine Gleichner PhD",
                                "id": 5
                            },
                            "rent_details": null,
                            "detail": {
                                "sku": "180DEA61438919496",
                                "category": 180,
                                "daily_price": 5993.81,
                                "name": "Deanna",
                                "tags": [
                                    "excavator",
                                    "pornition",
                                    "bob builder"
                                ],
                                "monthly_price": 7025.97,
                                "brand": "Conn, Wolff and Nader",
                                "description": "Laudantium vitae consequatur officia dolorum voluptatem culpa illum quos. Laborum ipsum dolore maxime commodi. Laudantium nihil porro perspiciatis commodi tempore. Distinctio animi est quibusdam ab aut. Repellat consectetur nam fugiat modi molestiae corrupti commodi blanditiis. Dolorem occaecati iusto eveniet aut enim est. Et in illo quasi repudiandae accusamus unde nam.",
                                "is_active": false,
                                "weekly_price": 2711.52,
                                "sell_price": 6344.57,
                                "date_created_at": "2015-08-07T03:51:36.239544Z",
                                "date_updated_at": "2015-08-07T03:51:36.239562Z",
                                "user": 6,
                                "images": [],
                                "attributes": null,
                                "id": 60,
                                "condition": "used",
                                "location": 12
                            },
                            "subtotal": 6344.57,
                            "shipping_charge": 0,
                            "additional_charge": 6.34,
                            "cost_breakup": {
                                "additional_charge": [
                                    {
                                        "name": "Environment Fee",
                                        "categories": [],
                                        "value": 4.68,
                                        "amt": 25.17,
                                        "user": 6,
                                        "item_kind": "all",
                                        "id": 3,
                                        "unit": "pct"
                                    },
                                    {
                                        "name": "Sales tax",
                                        "pct": 3.2,
                                        "amt": 166.84,
                                        "taxable_amt": 5213.68,
                                        "id": 1,
                                        "merged": true
                                    }
                                ],
                                "subtotal": {
                                    "amt": 6344.57,
                                    "unit_price": 6344.57
                                },
                                "shipping": {
                                    "amt": 0
                                }
                            },
                            "qty": 1,
                            "shipping_kind": "pickup",
                            "shipping_method": "Standard shipping"
                        }
                    ],
                    "total": 18673.64,
                    "date_created_at": "2015-08-07T03:51:37.041034Z",
                    "date_updated_at": "2015-08-07T03:51:37.041062Z",
                    "shipping_address": {
                        "city": {
                            "id": 1258847,
                            "name": "Rājkot"
                        },
                        "kind": "job_site",
                        "name": "Mr. Silvester Bernhard Jr.",
                        "country": {
                            "id": 1269750,
                            "name": "India"
                        },
                        "address2": null,
                        "coord": null,
                        "state": {
                            "id": 1270770,
                            "name": "Gujarat"
                        },
                        "address1": "60563 Tommie Mission\nHaywardmouth, IL 04030",
                        "id": 8,
                        "zip_code": "362287"
                    },
                    "billing_address": {
                        "city": {
                            "id": 1258847,
                            "name": "Rājkot"
                        },
                        "kind": "job_site",
                        "name": "Mr. Silvester Bernhard Jr.",
                        "country": {
                            "id": 1269750,
                            "name": "India"
                        },
                        "address2": null,
                        "coord": null,
                        "state": {
                            "id": 1270770,
                            "name": "Gujarat"
                        },
                        "address1": "60563 Tommie Mission\nHaywardmouth, IL 04030",
                        "id": 8,
                        "zip_code": "362287"
                    },
                    "subtotal": 13554.85,
                    "shipping_charge": 5100.14,
                    "additional_charge": 18.65,
                    "cost_breakup": {
                        "additional_charge": {
                            "environment_fee": 26.130000000000003,
                            "sales_tax": 391
                        },
                        "sales_tax_pct": 0.1
                    },
                    "user": 5
                }
            }


## Change Item Status [/v1/orders/{id}/items/{item_id}/actions/change_status]

Item status can be changed to only either `cancelled` or `delivered` by the user.
If the item is already dispatched or picked up, it cannot be canelled.
If the item is dispatched only then status can be changed to delivered.

+ Parameters
    + id (required, number, `1`) ... Order id
    + item_id (required, number, `1`) ... Item id found in order detail response
    

### Change status [PUT]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "status": "delivered", 
                "info": {
                    "comment": "Any useful comment"
                }
            }


+ Response 204 (application/json)



# Group OrderLine

This resource provides order information received to seller that they need to fulfill.


## List [GET /v1/orderlines]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)


            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "items": [
                            {
                                "id": 1,
                                "current_status": "not_confirmed",
                                "user": {
                                    "fullname": "Matthias Boehm",
                                    "id": 5
                                },
                                "rent_details": {
                                    "date_start": "2015-08-10T04:19:59.230234Z",
                                    "date_end": "2015-09-06T04:19:59.230241Z",
                                    "is_postpaid": true
                                },
                                "detail": {
                                    "id": 60,
                                    "name": "Terrance",
                                    "daily_price": 461.86,
                                    "sell_price": 912.4,
                                    "weekly_price": 8347.14,
                                    "monthly_price": 2614.55,
                                    "image": null
                                },
                                "subtotal": 2353.1,
                                "shipping_charge": 4783.11,
                                "additional_charge": 164.13,
                                "qty": 1,
                                "shipping_kind": "delivery",
                                "shipping_method": "Standard shipping"
                            },
                            {
                                "id": 3,
                                "current_status": "not_confirmed",
                                "user": {
                                    "fullname": "Matthias Boehm",
                                    "id": 5
                                },
                                "rent_details": null,
                                "detail": {
                                    "id": 59,
                                    "name": "Magen",
                                    "daily_price": 3227.58,
                                    "sell_price": 5265.43,
                                    "weekly_price": 3198.73,
                                    "monthly_price": 9138.54,
                                    "image": null
                                },
                                "subtotal": 5265.43,
                                "shipping_charge": 4783.11,
                                "additional_charge": 231.12,
                                "qty": 1,
                                "shipping_kind": "delivery",
                                "shipping_method": "Standard shipping"
                            }
                        ],
                        "order": {
                            "id": 1,
                            "user": {
                                "fullname": "Matthias Boehm",
                                "id": 5
                            },
                            "date_created_at": "2015-08-07T04:20:25.688998Z",
                            "date_updated_at": "2015-08-07T04:20:25.689027Z",
                            "subtotal": 8381.54,
                            "shipping_charge": 11069.91,
                            "additional_charge": 447.39
                        },
                        "total": 0,
                        "date_created_at": "2015-08-07T04:20:25.695471Z",
                        "date_updated_at": "2015-08-07T04:20:25.695495Z",
                        "subtotal": 0,
                        "shipping_charge": 0,
                        "additional_charge": 0,
                        "cost_breakup": {
                            "additional_charge": {}
                        },
                        "user": 6
                    }
                ]
            }



## Detail [GET /v1/orderlines/{id}]

+ Request

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "data": {
                    "id": 1,
                    "items": [
                        {
                            "id": 1,
                            "current_status": "not_confirmed",
                            "user": {
                                "fullname": "Dr. Bryan Paucek",
                                "id": 5
                            },
                            "rent_details": {
                                "date_start": "2015-08-10T05:51:00.851218Z",
                                "date_end": "2015-09-06T05:51:00.851232Z",
                                "is_postpaid": true
                            },
                            "detail": {
                                "sku": "168DON61438926685",
                                "category": 168,
                                "daily_price": 1418.92,
                                "name": "Donia",
                                "tags": [
                                    "excavator",
                                    "pornition",
                                    "bob builder"
                                ],
                                "monthly_price": 6550.4,
                                "brand": "Zieme Ltd",
                                "description": "Iusto sint repellat est ut debitis. Iste sunt veritatis quibusdam est sed et dignissimos. Autem nisi odit repellat pariatur officiis vel. Similique rerum blanditiis enim et. Asperiores recusandae placeat qui inventore voluptas hic. Non occaecati quod et officiis. Excepturi eius quaerat et cupiditate.",
                                "is_active": false,
                                "weekly_price": 9657.63,
                                "sell_price": 9606.72,
                                "date_created_at": "2015-08-07T05:51:25.502832Z",
                                "date_updated_at": "2015-08-07T05:51:25.502876Z",
                                "user": 6,
                                "images": [],
                                "attributes": null,
                                "id": 56,
                                "condition": "used",
                                "location": 12
                            },
                            "subtotal": 5895.36,
                            "shipping_charge": 3551.92,
                            "additional_charge": 92.58,
                            "cost_breakup": {
                                "additional_charge": {
                                    "amt": 92.58,
                                    "sales_tax": 92.58
                                },
                                "subtotal": {
                                    "rent_unit_days": 30,
                                    "unit_price": 5895.36,
                                    "rent_per": 6550.4,
                                    "daily_rent": 218.34666666666666,
                                    "amt": 5895.36,
                                    "num_days": 27
                                },
                                "shipping": {
                                    "method": "standard_shipping",
                                    "id": 9,
                                    "amt": 3551.92
                                }
                            },
                            "qty": 1,
                            "shipping_kind": "delivery",
                            "shipping_method": "Standard shipping"
                        },
                        {
                            "id": 3,
                            "current_status": "not_confirmed",
                            "user": {
                                "fullname": "Dr. Bryan Paucek",
                                "id": 5
                            },
                            "rent_details": null,
                            "detail": {
                                "sku": "171RIG61438926685",
                                "category": 171,
                                "daily_price": 1126.17,
                                "name": "Rigoberto",
                                "tags": [
                                    "excavator",
                                    "pornition",
                                    "bob builder"
                                ],
                                "monthly_price": 4748.34,
                                "brand": "Abbott, Fisher and Botsford",
                                "description": "Ut tenetur sapiente rerum quod et. Occaecati eligendi necessitatibus enim excepturi. Non maxime odit possimus cumque est. Consequuntur quo numquam quia aliquam exercitationem modi. Ut consequatur tempore est nulla molestias deserunt tenetur. Iusto aspernatur provident distinctio velit nihil enim ipsum. Voluptas enim quos maxime ad.",
                                "is_active": false,
                                "weekly_price": 2412.9,
                                "sell_price": 2342.66,
                                "date_created_at": "2015-08-07T05:51:25.506061Z",
                                "date_updated_at": "2015-08-07T05:51:25.506076Z",
                                "user": 6,
                                "images": [],
                                "attributes": null,
                                "id": 57,
                                "condition": "used",
                                "location": 12
                            },
                            "subtotal": 2342.66,
                            "shipping_charge": 0,
                            "additional_charge": 22.96,
                            "cost_breakup": {
                                "additional_charge": {
                                    "amt": 22.96,
                                    "sales_tax": 22.96
                                },
                                "subtotal": {
                                    "amt": 2342.66,
                                    "unit_price": 2342.66
                                },
                                "shipping": {
                                    "amt": 0
                                }
                            },
                            "qty": 1,
                            "shipping_kind": "pickup",
                            "shipping_method": "Standard shipping"
                        }
                    ],
                    "order": {
                        "id": 1,
                        "user": {
                            "fullname": "Dr. Bryan Paucek",
                            "id": 5
                        },
                        "date_created_at": "2015-08-07T05:51:26.194204Z",
                        "date_updated_at": "2015-08-07T05:51:26.194232Z",
                        "shipping_address": {
                            "city": {
                                "id": 1258847,
                                "name": "Rājkot"
                            },
                            "kind": "job_site",
                            "name": "Gottlieb Okuneva IV",
                            "country": {
                                "id": 1269750,
                                "name": "India"
                            },
                            "address2": null,
                            "coord": null,
                            "state": {
                                "id": 1270770,
                                "name": "Gujarat"
                            },
                            "address1": "7729 Lorin Ramp\nKulasmouth, SC 89574-3652",
                            "id": 8,
                            "zip_code": "360392"
                        },
                        "billing_address": {
                            "city": {
                                "id": 1258847,
                                "name": "Rājkot"
                            },
                            "kind": "job_site",
                            "name": "Gottlieb Okuneva IV",
                            "country": {
                                "id": 1269750,
                                "name": "India"
                            },
                            "address2": null,
                            "coord": null,
                            "state": {
                                "id": 1270770,
                                "name": "Gujarat"
                            },
                            "address1": "7729 Lorin Ramp\nKulasmouth, SC 89574-3652",
                            "id": 8,
                            "zip_code": "360392"
                        },
                        "subtotal": 2981.21,
                        "shipping_charge": 5000.95,
                        "additional_charge": 78.23,
                        "cost_breakup": {
                            "additional_charge": {
                                "amt": 78.23,
                                "sales_tax": 78.23
                            },
                            "sales_tax_pct": 0.98
                        }
                    },
                    "total": 0,
                    "date_created_at": "2015-08-07T05:51:26.200134Z",
                    "date_updated_at": "2015-08-07T05:51:26.200158Z",
                    "subtotal": 0,
                    "shipping_charge": 0,
                    "additional_charge": 0,
                    "cost_breakup": {
                        "additional_charge": {}
                    },
                    "user": 6
                }
            }

## Change Item Status [PUT /v1/orderlines/{id}/items/{item_id}/actions/change_status]

+ Parameters
    + id (required, number, `1`) ... Order id
    + item_id (required, number, `1`) ... Item id found in order detail response

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "status": "delivered", 
                "info": {
                    "comment": "Any useful comment"
                }
            }


+ Response 204 (application/json)

## Set Inventories [PUT /v1/orderlines/{id}/items/{item_id}/inventories]

Before seller can approve the order item, he needs to assign inventories to that item.
Number of inventories assigned to an order item should match the number of quantity
otherwise error will raise.

Seller can assign only available inventories to the item, if inventory is not available, 
seller needs to either add more inventory or free up the occupied inventory.


+ Parameters
    + id (required, number, `1`) ... Order id
    + item_id (required, number, `1`) ... Item id found in order detail response

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body
    
            {
                "inventories": [1, 3, 5]
            }


+ Response 204 (application/json)


# Group Invoice
Invoices are consolidataion of the purchase and rental items that includes all the charges and prices
of the items. User is liable to pay the invoice to confirm the order or to keep all the contracts running.

While checking out the cart, if cart contains all rental items, invoice will still be generated but the
payable amount will be 0. Although user should pay the invoice but using the dummy payment gateway.
We'll cover that in this section later.


## List [GET /v1/invoices]
List all the invoices

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "order": {
                            "id": 1,
                            "shipping_address": {
                                "city": {
                                    "id": 1258847,
                                    "name": "Rājkot"
                                },
                                "kind": "job_site",
                                "last_name": "McKenzie",
                                "name": "Dr. Carmen McDermott",
                                "country": {
                                    "id": 1269750,
                                    "name": "India"
                                },
                                "address2": null,
                                "first_name": "Tatsuo",
                                "coord": null,
                                "phone": "+176318747477150",
                                "state": {
                                    "id": 1270770,
                                    "name": "Gujarat"
                                },
                                "company_name": "Ullrich, Boehm and Cormier",
                                "address1": "168 Noreen Cove\nToyport, WI 82734-2077",
                                "id": 8,
                                "zip_code": "362426"
                            },
                            "billing_address": {
                                "city": {
                                    "id": 1258847,
                                    "name": "Rājkot"
                                },
                                "kind": "job_site",
                                "last_name": "McKenzie",
                                "name": "Dr. Carmen McDermott",
                                "country": {
                                    "id": 1269750,
                                    "name": "India"
                                },
                                "address2": null,
                                "first_name": "Tatsuo",
                                "coord": null,
                                "phone": "+176318747477150",
                                "state": {
                                    "id": 1270770,
                                    "name": "Gujarat"
                                },
                                "company_name": "Ullrich, Boehm and Cormier",
                                "address1": "168 Noreen Cove\nToyport, WI 82734-2077",
                                "id": 8,
                                "zip_code": "362426"
                            }
                        },
                        "total": 11720.26,
                        "subtotal": 7566.11,
                        "additional_charge": 530.4,
                        "cost_breakup": {
                            "additional_charge": {
                                "environment_fee": 26.130000000000003,
                                "sales_tax": 391
                            }
                        },
                        "user": {
                            "fullname": "Dr. Eustace Nienow",
                            "id": 5
                        },
                        "date_created_at": "2015-08-10T15:07:24.781299Z",
                        "date_updated_at": "2015-08-10T15:07:24.781322Z",
                        "order_note": null,
                        "po": "",
                        "is_paid": false,
                        "is_for_order": true,
                        "is_approve": true
                    }
                ]
            }


## Invoice Detail [GET /v1/invoices/{id}]

Get invoice detail

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)


            {
                "data": {
                    "id": 1,
                    "order": {
                        "id": 1,
                        "shipping_address": {
                            "city": {
                                "id": 1258847,
                                "name": "Rājkot"
                            },
                            "kind": "job_site",
                            "last_name": "Cartwright",
                            "name": "Alphonsine Mosciski",
                            "country": {
                                "id": 1269750,
                                "name": "India"
                            },
                            "address2": null,
                            "first_name": "Jocelyne",
                            "coord": null,
                            "phone": "+166830717696566",
                            "state": {
                                "id": 1270770,
                                "name": "Gujarat"
                            },
                            "company_name": "Conroy Group",
                            "address1": "9693 Mavis Garden\nNorth Royal, MS 01739",
                            "id": 8,
                            "zip_code": "361534"
                        },
                        "billing_address": {
                            "city": {
                                "id": 1258847,
                                "name": "Rājkot"
                            },
                            "kind": "job_site",
                            "last_name": "Cartwright",
                            "name": "Alphonsine Mosciski",
                            "country": {
                                "id": 1269750,
                                "name": "India"
                            },
                            "address2": null,
                            "first_name": "Jocelyne",
                            "coord": null,
                            "phone": "+166830717696566",
                            "state": {
                                "id": 1270770,
                                "name": "Gujarat"
                            },
                            "company_name": "Conroy Group",
                            "address1": "9693 Mavis Garden\nNorth Royal, MS 01739",
                            "id": 8,
                            "zip_code": "361534"
                        }
                    },
                    "total": 7343.88,
                    "subtotal": 6277.9,
                    "additional_charge": 1065.98,
                    "cost_breakup": {
                        "additional_charge": {
                            "environment_fee": 26.130000000000003,
                            "sales_tax": 391
                        }
                    },
                    "user": {
                        "fullname": "Dr. Candida Stroman",
                        "id": 5
                    },
                    "items": [
                        {
                            "id": 3,
                            "total": 0,
                            "additional_charge": 0,
                            "date_created_at": "2015-08-10T15:11:08.701570Z",
                            "date_updated_at": "2015-08-10T15:11:08.701591Z",
                            "description": "Sigrid\nSKU: 210SIG71439219468\nRent from 2015-08-13T15:10:41.405445+00:00 to 2015-09-09T15:10:41.405452+00:00\nPost paid payment",
                            "qty": 1,
                            "unit_price": 0,
                            "subtotal": 0,
                            "shipping_charge": 0,
                            "overuse_charge": 0,
                            "cost_breakup": {
                                "additional_charge": {}
                            },
                            "date_from": null,
                            "date_to": null,
                            "user": 7
                        },
                        {
                            "id": 2,
                            "total": 0,
                            "additional_charge": 0,
                            "date_created_at": "2015-08-10T15:11:08.697001Z",
                            "date_updated_at": "2015-08-10T15:11:08.697023Z",
                            "description": "Kaelyn\nSKU: 180KAE61439219467\nRent from 2015-08-13T15:10:41.405445+00:00 to 2015-09-09T15:10:41.405452+00:00\nPost paid payment",
                            "qty": 1,
                            "unit_price": 0,
                            "subtotal": 0,
                            "shipping_charge": 0,
                            "overuse_charge": 0,
                            "cost_breakup": {
                                "additional_charge": {}
                            },
                            "date_from": null,
                            "date_to": null,
                            "user": 6
                        },
                        {
                            "id": 1,
                            "total": 7343.88,
                            "additional_charge": 1065.98,
                            "date_created_at": "2015-08-10T15:11:08.690786Z",
                            "date_updated_at": "2015-08-10T15:11:08.690820Z",
                            "description": "Syreeta\nSKU: 177SYR61439219467",
                            "qty": 1,
                            "unit_price": 6277.9,
                            "subtotal": 6277.9,
                            "shipping_charge": 0,
                            "overuse_charge": 0,
                            "cost_breakup": {
                                "additional_charge": [
                                    {
                                        "name": "Environment Fee",
                                        "categories": [],
                                        "value": 4.68,
                                        "amt": 25.17,
                                        "user": 6,
                                        "item_kind": "all",
                                        "id": 3,
                                        "unit": "pct"
                                    },
                                    {
                                        "name": "Sales tax",
                                        "pct": 3.2,
                                        "amt": 166.84,
                                        "taxable_amt": 5213.68,
                                        "id": 1,
                                        "merged": true
                                    }
                                ],
                                "subtotal": {
                                    "amt": 6277.9,
                                    "unit_price": 6277.9
                                },
                                "shipping": {
                                    "amt": 0
                                }
                            },
                            "date_from": null,
                            "date_to": null,
                            "user": 6
                        }
                    ],
                    "date_created_at": "2015-08-10T15:11:08.667244Z",
                    "date_updated_at": "2015-08-10T15:11:08.667307Z",
                    "order_note": null,
                    "po": "",
                    "is_paid": false,
                    "is_for_order": true,
                    "is_approve": true
                }
            }


## Paying the Invoice [POST /v1/invoices/{id}/actions/pay]

To pay the invoice, you must provide three things, payment gateway, its nonce fed by user and return url.
Each parameter is described in attribute section.

### 0 amount invoice

If invoice amount is 0, there is a special dummy gateway is designed called `postpaid`. 
When cart amount is 0 i.e. when cart contains only rental items, you must provide gateway name is `postpaid`

As soon as you receive the response, you should redirect user to `redirect_url` found in the response.

### >0 amount invoice, using Braintree

If invoice amount is >0, you can pay invoice using Braintree gateway.

Visit braintree guide for more detail and flow. While using the Braintree, `nonce` will be of following object.

    {
        "token": "afawe6faw87efg6hg8d7ghn89gfhm9087"
    }

+ Parameters
    + id (required, number, `1`) ... Invoice id

+ Attributes
    + gateway: postpaid (required, string) - One of the available payment gateways to system
    + return_url (required, string)- URL of your site. This url will be used to redirect user
     on this location upon payment response. Three parameters will appended to return_url, status=<success/fail>,
     message=<Human readable message from payment gateway>, trasaction_id
    + nonce (optional, object): Credential from user related to gateway (eg, credit card detail)


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "gateway": "postpaid",
                "return_url": "http://mysite.com"
            }
    

+ Response 200 (application/json)

            {
                "data": {
                    "transaction": {
                        "id": "15LVJJ1VCE6IEMUM8",
                        "date_created_at": "2015-08-10T16:16:17.140569Z",
                        "date_updated_at": "2015-08-10T16:16:17.140595Z",
                        "expected_amt": 0,
                        "received_amt": 0,
                        "using": "postpaid",
                        "status": "success",
                        "payer": 5,
                        "invoice": 1
                    },
                    "redirect_url": "http://mysite.com?status=success&message=Payment+is+successful&transaction_id=15LVJJ1VCE6IEMUM8"
                }
            }



# Group Invoiceline

Invoiceline is sub-invoices groupped by seller. So it's invoices for seller.

## Invoiceline List [GET /v1/invoicelines]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "total": 6427.91,
                        "subtotal": 5898.79,
                        "additional_charge": 529.12,
                        "invoice": {
                            "order": {
                                "id": 1,
                                "shipping_address": {
                                    "id": 1,
                                    "name": "KolkVXuL8pWs",
                                    "first_name": "Zebulon",
                                    "last_name": "Miller",
                                    "company_name": "Boehm-Rath",
                                    "phone": "+149918135162161",
                                    "address1": "6309 Fahey Station Suite 745\nRitchieview, NY 49540-6307",
                                    "address2": null,
                                    "zip_code": "364127",
                                    "coord": null,
                                    "kind": "job_site",
                                    "city": 1258847,
                                    "state": 1270770,
                                    "country": 1269750
                                },
                                "billing_address": {
                                    "id": 2,
                                    "name": "kky0oj5WL9Qr",
                                    "first_name": "Zebulon",
                                    "last_name": "Miller",
                                    "company_name": "Boehm-Rath",
                                    "phone": "+149918135162161",
                                    "address1": "6309 Fahey Station Suite 745\nRitchieview, NY 49540-6307",
                                    "address2": null,
                                    "zip_code": "364127",
                                    "coord": null,
                                    "kind": "job_site",
                                    "city": 1258847,
                                    "state": 1270770,
                                    "country": 1269750
                                }
                            },
                            "user": {
                                "fullname": "Dr. Jaime Cremin V",
                                "id": 5
                            },
                            "is_paid": false
                        },
                        "is_approve": true,
                        "remark": "",
                        "user": {
                            "fullname": "Anton Haag",
                            "id": 6
                        }
                    }
                ]
            }


## Invoiceline Detail [GET /v1/invoicelines/{id}]

+ Parameters

    + id (required, number, `34`) ... Id of invoice line

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

            {
                "data": {
                    "id": 1,
                    "total": 4136.7699999999995,
                    "subtotal": 916.86,
                    "additional_charge": 38.78,
                    "invoice": {
                        "order": {
                            "id": 1,
                            "shipping_address": {
                                "id": 1,
                                "name": "0ooROB8rsFTo",
                                "first_name": "Lori",
                                "last_name": "Ryan",
                                "company_name": "Schmidt PLC",
                                "phone": "+117970680409058",
                                "address1": "79864 Marquardt Junctions Suite 837\nDerlfort, VT 27526",
                                "address2": null,
                                "zip_code": "364640",
                                "coord": null,
                                "kind": "job_site",
                                "city": 1258847,
                                "state": 1270770,
                                "country": 1269750
                            },
                            "billing_address": {
                                "id": 2,
                                "name": "56PtnOfk99rg",
                                "first_name": "Lori",
                                "last_name": "Ryan",
                                "company_name": "Schmidt PLC",
                                "phone": "+117970680409058",
                                "address1": "79864 Marquardt Junctions Suite 837\nDerlfort, VT 27526",
                                "address2": null,
                                "zip_code": "364640",
                                "coord": null,
                                "kind": "job_site",
                                "city": 1258847,
                                "state": 1270770,
                                "country": 1269750
                            }
                        },
                        "user": {
                            "fullname": "Miss Selene Howe",
                            "id": 5
                        },
                        "is_paid": false
                    },
                    "is_approve": true,
                    "remark": "",
                    "user": {
                        "fullname": "Asa Runolfsdottir",
                        "id": 6
                    }
                }
            }

## Approve Invoiceline [PUT /v1/invoicelines/{id}/actions/approve]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 204 (application/json)



## List Invoiceline Items [GET /v1/invoicelines/{id}/items]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 2,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 2,
                        "total": 0,
                        "additional_charge": 0,
                        "date_created_at": "2015-09-08T06:28:22.002675Z",
                        "date_updated_at": "2015-09-08T06:28:22.002700Z",
                        "description": "Katarina\nSKU: 168KAT61441693701\nRent from 2015-09-11T06:27:49.004661+00:00 to 2015-10-08T06:27:49.004670+00:00\nPost paid payment",
                        "qty": 1,
                        "unit_price": 0,
                        "subtotal": 0,
                        "shipping_charge": 0,
                        "overuse_charge": 0,
                        "cost_breakup": {
                            "additional_charge": {}
                        },
                        "date_from": "2015-09-11T06:27:49.004661Z",
                        "date_to": "2015-09-11T06:27:49.004661Z",
                        "is_final_invoice": false,
                        "user": 6
                    },
                    {
                        "id": 1,
                        "total": 9713.99,
                        "additional_charge": 413.48,
                        "date_created_at": "2015-09-08T06:28:21.996614Z",
                        "date_updated_at": "2015-09-08T06:28:21.996639Z",
                        "description": "Jude\nSKU: 171JUD61441693701",
                        "qty": 1,
                        "unit_price": 5498.36,
                        "subtotal": 5498.36,
                        "shipping_charge": 3802.15,
                        "overuse_charge": 0,
                        "cost_breakup": {
                            "additional_charge": [
                                {
                                    "name": "Environment Fee",
                                    "categories": [],
                                    "value": 7.52,
                                    "amt": 413.48,
                                    "user": 6,
                                    "item_kind": "all",
                                    "id": 3,
                                    "unit": "pct"
                                },
                                {
                                    "name": "Sales tax",
                                    "value": 0,
                                    "merged": true,
                                    "pct": 0,
                                    "amt": 0,
                                    "unit": "pct"
                                }
                            ],
                            "subtotal": {
                                "amt": 5498.36,
                                "unit_price": 5498.36
                            },
                            "shipping": {
                                "method": "standard_shipping",
                                "id": 9,
                                "amt": 3802.15
                            }
                        },
                        "date_from": null,
                        "date_to": null,
                        "is_final_invoice": false,
                        "user": 6
                    }
                ]
            }


## Update Invoiceline Item [PATCH /v1/invoicelines/{id}/items/{item_id}]

+ Parameters

    + id (required, number, `234`) ... Invoiceline id
    + item_id (required, number, `345`) ... Item id to be updated

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "description": "ABC item \n SKU: 24234",
                "unit_price": 123.45,
                "subtotal": 2345.23
                "shipping_charge": 43.54,
                "overuse_charge": 0.0
            }


+ Response 200 (application/json)


            {
                "data": {
                    "id": 2,
                    "total": 530.32,
                    "additional_charge": 0,
                    "date_created_at": "2015-09-08T07:04:03.054891Z",
                    "date_updated_at": "2015-09-08T07:04:03.221114Z",
                    "description": "Thea\nSKU: 174THE61441695842\nRent from 2015-09-11T07:03:29.271602+00:00 to 2015-10-08T07:03:29.271618+00:00\nPost paid payment",
                    "qty": 1,
                    "unit_price": 123.34,
                    "subtotal": 2345.23,
                    "shipping_charge": 43.54,
                    "overuse_charge": 0.0,
                    "cost_breakup": {
                        "additional_charge": {}
                    },
                    "date_from": "2015-09-11T07:03:29.271602Z",
                    "date_to": "2015-09-11T07:03:29.271602Z",
                    "is_final_invoice": false,
                    "user": 6
                }
            }


# Group Settings

Settings are user's preferences towards system's default or new parameters. Currently there are 3 setting profiles that user can
change; General / Shippings and Additional charges.

## General Setting [/v1/users/{id}/setting]

### Update the Settings [PATCH]

+ Attributes
    + minimum_contract_period: 3 (optional, number) - Minimum contract period in days, default is 0
    
+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
        
    + Body
        
            {"minimum_contract_period": 2}
                
+ Response 204 (application/json)

### Retreive [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
        
                
+ Response 200 (application/json)


            {"minimum_contract_period": 2}


# Group Shipping
This resource is intended for price rules for shipping equipments to destination location.
Currently system supports only single kind of shipping method `Standard Shipping`.

## Standard Shipping Method [/v1/settings/shipping/standard]

User has to define the shipping cost for the each zip code or zip code range.
For eg, Charge $100 if destination zip code falls between 360001-361234. 
Use can define rules as many as he wants.

### Add a Rule [POST]

+ Attributes
    + origin: 2 (required, number) - Job site id as origin of the shipping
    + country: 2 (required, number) - Country id as destination
    + zipcode_start: 123 (required, number) - Zip code start offset
    + zipcode_end: 345 (required, number) - Zip code limit offset
    + cost: 12.43 (required, number) - Shipping charge for the given zip code that falls into `zipcode_start` and `zipcode_end`
    + delivery_days: 4 (required, number) - Estimated delivery business days

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            
    + Body 
    
            {   
                "origin": 17
                "country": 1269750,
                "cost": 100,
                "zipcode_start": 360020
                "zipcode_end": 360021
                "delivery_days": 7
            }
            
+ Response 201 (application/json)

            {
                "data": {
                    "id": 17,
                    "zipcode_start": 360020,
                    "zipcode_end": 360021,
                    "delivery_days": 7,
                    "cost": 1100,
                    "user": 3,
                    "origin": 17,
                    "country": 1269750
                }
            }


### List Rules [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 17,
                    "next": "http://testserver/settings/shipping/standard?page=2",
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "delivery_days": 7,
                        "cost": 4665.76,
                        "user": 4,
                        "origin": 4,
                        "country": 1269750
                    },
                    {
                        "id": 2,
                        "zipcode_start": 380001,
                        "zipcode_end": 393130,
                        "delivery_days": 7,
                        "cost": 5209.82,
                        "user": 4,
                        "origin": 1,
                        "country": 1269750
                    },
                    {
                        "id": 3,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "delivery_days": 7,
                        "cost": 5160.83,
                        "user": 4,
                        "origin": 2,
                        "country": 1269750
                    },
                    {
                        "id": 4,
                        "zipcode_start": 388710,
                        "zipcode_end": 396510,
                        "delivery_days": 7,
                        "cost": 9485.69,
                        "user": 4,
                        "origin": 2,
                        "country": 1269750
                    },
                    {
                        "id": 5,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "delivery_days": 7,
                        "cost": 4905.37,
                        "user": 5,
                        "origin": 8,
                        "country": 1269750
                    },
                    {
                        "id": 6,
                        "zipcode_start": 380001,
                        "zipcode_end": 393130,
                        "delivery_days": 7,
                        "cost": 5110.42,
                        "user": 5,
                        "origin": 5,
                        "country": 1269750
                    },
                    {
                        "id": 7,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "delivery_days": 7,
                        "cost": 6909.38,
                        "user": 5,
                        "origin": 6,
                        "country": 1269750
                    },
                    {
                        "id": 8,
                        "zipcode_start": 388710,
                        "zipcode_end": 396510,
                        "delivery_days": 7,
                        "cost": 8292.33,
                        "user": 5,
                        "origin": 6,
                        "country": 1269750
                    },
                    {
                        "id": 9,
                        "zipcode_start": 360001,
                        "zipcode_end": 365480,
                        "delivery_days": 7,
                        "cost": 4633.51,
                        "user": 6,
                        "origin": 12,
                        "country": 1269750
                    },
                    {
                        "id": 10,
                        "zipcode_start": 380001,
                        "zipcode_end": 393130,
                        "delivery_days": 7,
                        "cost": 5129.15,
                        "user": 6,
                        "origin": 9,
                        "country": 1269750
                    }
                ]
            }


## Rule Object [/v1/settings/shipping/standard/{id}]

### Retreive [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE
            

+ Response 201 (application/json)

            {
                "data": {
                    "id": 17,
                    "zipcode_start": 360020,
                    "zipcode_end": 360021,
                    "delivery_days": 7,
                    "cost": 1100,
                    "user": 3,
                    "origin": 17,
                    "country": 1269750
                }
            }

### Update [PATCH]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body 
    
            {   
                "cost": 150
            }
            
+ Response 200 (application/json)

            {
                "data": {
                    "id": 17,
                    "zipcode_start": 360020,
                    "zipcode_end": 360021,
                    "delivery_days": 7,
                    "cost": 150,
                    "user": 3,
                    "origin": 17,
                    "country": 1269750
                }
            }


# Group Additional Charges
Additional charges are defined as any other extra charges defined by the seller and seperated from the standard charges. Additional charges are applied on subtotal of the items.

User can define additional charges either flat or percentage of item cost.

### ENUM

* unit: 
    * `flat`: Defines flat charge irrespective of item cost
    * `pct`: Pertage of the item cost

* item_kind:
    * `rental`: Rental item only
    * `purchase`: Purchase item only
    * `both`: All item


## Additional Charge Collection [/v1/charges/additional_charges]

### Create a New Charge [POST]

+ Attributes
    + name: VAT (required, string) - Name of the charge. It'll be visible in invoice
    + value: 300.34 (required, number) - Value of the charge. Indicates percentage if unit is `pct`
    + unit: flat (required, string) - Can be one of Unit enum
    + `item_kind`: rental (required, string) - It defines, what item this charge should be applied for. One of item_kind enum
    + catagories: 34 (optional, array) - It defines, charge application only when item falls into one of these catagories.

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "value": 3.75,
                "categories": [163, 61, 196],
                "name": "Environment fee", "unit": "pct",
                "item_kind": "rental"
            }

+ Response 201 (application/json)

            {
                "data": {
                    "id": 5,
                    "name": "Environment fee",
                    "value": 3.75,
                    "unit": "pct",
                    "item_kind": "rental",
                    "user": 3,
                    "categories": [
                        163, 61, 196
                    ]
                }
            }

### List [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 5,
                        "name": "environment",
                        "value": 7.55,
                        "unit": "pct",
                        "item_kind": "rental",
                        "user": 3,
                        "categories": [
                            63,
                            134,
                            213
                        ]
                    }
                ]
            }

## Additional Charge [/v1/charges/additional_charges/{id}]

+ Parameters
    + id (required, number, `1`) ... Additional charge id

### Retreive [GET]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

            {
                "data": {
                    "id": 5,
                    "name": "Environment fee",
                    "value": 3.75,
                    "unit": "pct",
                    "item_kind": "rental",
                    "user": 3,
                    "categories": [
                        163, 61, 196
                    ]
                }
            }

### Update [PATCH]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "value": 5.75,
            }

+ Response 200 (application/json)

            {
                "data": {
                    "id": 5,
                    "name": "Environment fee",
                    "value": 5.75,
                    "unit": "pct",
                    "item_kind": "rental",
                    "user": 3,
                    "categories": [
                        163, 61, 196
                    ]
                }
            }



# Group Inquiry

This resource provides chatting like mechanism for buyer to ask anything  to seller about product.

This whole module is consist of two things, `Message Threads` and `Message` itself.
Whenever user wants to raise new product inquiry prior to purchase, first *thread* should be created, then after message.

Once the thread is created, additional message from buyer and seller on same topic gets started within the thread.

## Thread Collection [/v1/inquiries]

### List Inquiries/Threads [GET]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)


            {
                "meta": {
                    "count": 1,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 2,
                        "thread": 2,
                        "unread_count": 0,
                        "message_count": 0,
                        "date_created_at": "2015-08-31T12:15:09.314889Z",
                        "date_updated_at": "2015-08-31T12:15:09.314908Z",
                        "subject": "Inquiry about Earlene",
                        "product": 81,
                        "to_user": 8,
                        "user": 3
                    }
                ]
            }


### Create Inquiry/Thread [POST]


+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "product": 3,
                "text": "This is the enquiry",
                "subject": "Inquiry about Yamilet"
            }

+ Response 201 (application/json)

            {
                "data": {
                    "id": 1,
                    "thread": 1,
                    "date_created_at": "2015-08-31T12:30:12.307620Z",
                    "date_updated_at": "2015-08-31T12:30:12.307644Z",
                    "subject": "Inquiry about Yamilet",
                    "product": 81,
                    "to_user": 8,
                    "user": 3
                }
            }



## Message Collection [/v1/inquiries/{id}/messages]

+ Parameters
    + id (required, number, `1`) ... Thread/Inquiry id for which message to be listed


### List Messages [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

            {
                "meta": {
                    "count": 7,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 7,
                        "date_created_at": "2015-08-31T12:36:14.852776Z",
                        "date_updated_at": "2015-08-31T12:36:14.852796Z",
                        "text": "Ut itaque ea consequatur animi modi reiciendis. Non commodi sit repellendus tenetur velit itaque ut. Vero praesentium quod voluptates aut nam aut reiciendis.",
                        "is_read": true,
                        "thread": 1,
                        "user": 8
                    },
                    {
                        "id": 6,
                        "date_created_at": "2015-08-31T12:36:14.850246Z",
                        "date_updated_at": "2015-08-31T12:36:14.850266Z",
                        "text": "Perferendis maiores perspiciatis qui. Distinctio et magnam voluptatem quae cumque mollitia. Ipsa ut quo maiores quam quia accusantium temporibus. Aut iure eum et.",
                        "is_read": true,
                        "thread": 1,
                        "user": 8
                    },
                    {
                        "id": 5,
                        "date_created_at": "2015-08-31T12:36:14.847710Z",
                        "date_updated_at": "2015-08-31T12:36:14.847730Z",
                        "text": "Enim et quisquam in voluptatibus cumque modi. Qui eius sunt officiis et animi optio doloremque. Voluptas est qui id natus est molestiae et. Non quod ab ut dolore officiis incidunt. Itaque ut quibusdam aut.",
                        "is_read": true,
                        "thread": 1,
                        "user": 8
                    },
                    {
                        "id": 4,
                        "date_created_at": "2015-08-31T12:36:14.845182Z",
                        "date_updated_at": "2015-08-31T12:36:14.845204Z",
                        "text": "Dicta expedita eos dolor neque iste quam ab recusandae. Eveniet odio ratione perferendis inventore repellat harum.",
                        "is_read": true,
                        "thread": 1,
                        "user": 8
                    },
                    {
                        "id": 3,
                        "date_created_at": "2015-08-31T12:36:14.842535Z",
                        "date_updated_at": "2015-08-31T12:36:14.842556Z",
                        "text": "Sed ipsa quibusdam dolorem soluta. Voluptates cupiditate enim facilis voluptas ipsam. Odio et quasi voluptas ipsam.",
                        "is_read": true,
                        "thread": 1,
                        "user": 8
                    },
                    {
                        "id": 2,
                        "date_created_at": "2015-08-31T12:36:14.839844Z",
                        "date_updated_at": "2015-08-31T12:36:14.839866Z",
                        "text": "Totam aut at dolore delectus eius explicabo eligendi. Nesciunt amet aut dignissimos tenetur voluptatem quibusdam. Dolorem quaerat illum vel est nemo voluptates quo sunt.",
                        "is_read": true,
                        "thread": 1,
                        "user": 3
                    },
                    {
                        "id": 1,
                        "date_created_at": "2015-08-31T12:36:14.836462Z",
                        "date_updated_at": "2015-08-31T12:36:14.836479Z",
                        "text": "Soluta sunt vero voluptate. Nobis velit voluptates quasi consequatur natus illo deleniti doloremque. Et inventore aut illum.",
                        "is_read": true,
                        "thread": 1,
                        "user": 3
                    }
                ]
            }


### Create Message [POST]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "message": "This is test message"
            }

+ Response 201 (application/json)


            {
                "id": 7,
                "date_created_at": "2015-08-31T12:36:14.852776Z",
                "date_updated_at": "2015-08-31T12:36:14.852796Z",
                "text": "This is test message",
                "is_read": true,
                "thread": 1,
                "user": 8
            }


# Group Reviews

Reviews are those buyer/seller gives each other on completing the order item. They share their experience feedback about how they likely to transact again with each other.

Review system is consist of simple *1-5  Star* and a comment box.


## Review Collection [/v1/reviews{?reviewer,product}]

### List Reviews [GET]

+ Parameters

    + reviewer (optional, string, `buyer`) ... Filter by buyer or seller. Either `buyer` or `seller`
    + product (optional, number, `2`) ... Filter reviews by product id

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)

            {
                "meta": {
                    "count": 2,
                    "next": null,
                    "previous": null
                },
                "data": [
                    {
                        "id": 1,
                        "reviewer": "buyer",
                        "comment": "nice",
                        "rating": 3,
                        "user": 5,
                        "to_user": 7,
                        "product": 70,
                        "order_item": 2
                    },
                    {
                        "id": 2,
                        "reviewer": "seller",
                        "comment": "nice",
                        "rating": 3,
                        "user": 7,
                        "to_user": 5,
                        "product": 70,
                        "order_item": 2
                    }
                ]
            }


### Create A Review [POST]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

    + Body

            {
                "rating": 3,
                "comment": "nice",
                "order_item": 1
            }


+ Response 201 (application/json)

            {
                "data": {
                    "id": 1,
                    "reviewer": "buyer",
                    "comment": "nice",
                    "rating": 3,
                    "user": 5,
                    "to_user": 7,
                    "product": 67,
                    "order_item": 2
                }
            }


# Group System
This api provides some system related informative endpoints like countries, states, enums etc

## Countries [/v1/system/countries]
Informative API for country list supported by the system

### List of Countries [GET]

List of countries. Returns the key-value pair of id and name

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)


            {
                "data": {
                    "49518": "Rwanda",
                    "51537": "Somalia",
                    "69543": "Yemen",
                    "99237": "Iraq",
                    "102358": "Saudi Arabia",
                    "130758": "Iran",
                    "146669": "Cyprus",
                    "933860": "Botswana",
                    "934292": "Mauritius",
                    "934841": "Swaziland",
                    "935317": "Reunion",
                    "953987": "South Africa",
                    "1024031": "Mayotte",
                    "1036973": "Mozambique",
                    "1062947": "Madagascar",
                    "1149361": "Afghanistan",
                    "1168579": "Pakistan",
                    "1210997": "Bangladesh",
                    "1218197": "Turkmenistan",
                    "1220409": "Tajikistan",
                    "1227603": "Sri Lanka",
                    "1252634": "Bhutan",
                    "1269750": "India",
                    "1282028": "Maldives",
                    "1282588": "British Indian Ocean Territory",
                    "1282988": "Nepal",
                    "1327865": "Myanmar",
                    "1512440": "Uzbekistan",
                    "1522867": "Kazakhstan",
                    "1527747": "Kyrgyzstan"
                }
            }
            
## Region/States [/v1/system/countries/{country_id}/regions]

+ Parameters
    + country_id (required, number, `1269750`) ... Country id of which regions are expected
    

### List of Regions [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

            
            {
              "data": {
                "1270770": "Gujarat",
                "1270771": "Karnataka",
                "1270772": "Delhi",
                "1270773": "Maharashtra",
              }
            }
            
## City [/v1/system/countries/{country_id}/regions/{region_id}/cities]

+ Parameters
    + country_id (required, number, `1269750`) ... Country id of which cities are expected
    + region_id (required, number, `1270770`) ... Region id of which cities are expected

### List of Cities [GET]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE


+ Response 200 (application/json)

            {
                "data": {
                    "1252958": "Wānkāner",
                    "1253024": "Waghāi",
                    "1253074": "Vyāra",
                    "1253095": "Visnagar",
                    "1253105": "Vīsāvadar",
                    "1253115": "Virpur",
                    "1253162": "Vinchia",
                    "1278742": "Amod",
                    "1279213": "Ahwa",
                    "1279233": "Ahmedabad",
                    "1279373": "Adalaj",
                    "7279741": "Vapi",
                    "7303983": "Jhulasan"
                }
            }
            

# Group Payment Gateway

## Braintree - Generate Client Token [GET /v1/paymentgateway/braintree/actions/generate_token]

+ Request (application/json)

    + Header

            Authorization: Token TOKEN_VALUE

+ Response 200 (application/json)


            {
                "client_token": "awe89f76a9g8yvq873ytr67q39y4t3q4tfcq34tfq34tq34tfq34tq34tg34tf34rtgq34thqb346n5y4hb99568uyun68yq036yb3"
            }