from common import errors
from . import messages
from transaction.constants import Status as status_const


class ChargeResponse(object):
    """
    Class for charge response
    """
    #: Redirect url, generated by payment gateway
    redirect_url = None
    #: Received amount, returned by payment gateway
    received_amt = None
    #: Raw response should be in dict of payment gateway
    raw = None
    #: Standard status any of transaction.constants.Status
    status = None
    #: Human readable success / fail reason message
    message = None

    def __init__(self, **kwargs):
        for k, v in kwargs.items():
            setattr(self, k, v)


class PaymentGateway(object):
    """
    Base class for payment gateways. All payment gateway should inherit this class
    """

    def charge(self, invoice, transaction_ref, **kwargs):
        raise NotImplementedError


class Postpaid(PaymentGateway):
    """
    Dummy gateway specially created for the 0 amount payment. 0 amount can be happen if all
    order item is for rental.
    """
    name = 'postpaid'

    def charge(self, invoice, transaction_ref, **kwargs):
        if invoice.total > 0:
            raise errors.PaymentError(*messages.ERR_INVALID_AMT)

        return ChargeResponse(
            redirect_url=None,
            received_amt=0,
            raw={},
            status=status_const.SUCCESS,
            messages='Payment is successful'
        )


class Braintree(PaymentGateway):
    """
    Implementation of braintree gateway
    """
    name = 'braintree'

    def __init__(self, *args, **kwargs):
        """
        Loads the config
        """
        super(Braintree, self).__init__(*args, **kwargs)


def get_by_name(name):
    """
    Return the payment gateway object

    :param str name: Payment gateway name
    :return PaymentGateway:
    :raise PaymentError:
    """
    pgs = [Postpaid, Braintree]
    for pg in pgs:
        if pg.name == name.lower().stripe():
            return pg()

    raise errors.PaymentError(*messages.ERR_INVALID_PG_NAME)
